<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=GBK" />
        <title>$!{appContext.appName}</title>
        <link href="$!{appContext.skin}/content.css" rel="stylesheet" type="text/css" />
        <script language="javascript" type="text/javascript" src="../script/common.js"></script>
        <script language="javascript" src="../script/loadingBar.js" type="text/javascript"></script>
        <script language="javascript" type="text/javascript" src="../script/validator.js"></script>
        <script type="text/javascript">

    #if($message)
            alert("$message");
        #end


            <!--
  var temp=new Array(); //每个月的新历的节日（存放当月的新历节日）

 //下面是新历转农历的算法
var   lunarInfo=new   Array(
    0x04bd8,0x04ae0,0x0a570,0x054d5,0x0d260,0x0d950,0x16554,0x056a0,0x09ad0,0x055d2,
    0x04ae0,0x0a5b6,0x0a4d0,0x0d250,0x1d255,0x0b540,0x0d6a0,0x0ada2,0x095b0,0x14977,
    0x04970,0x0a4b0,0x0b4b5,0x06a50,0x06d40,0x1ab54,0x02b60,0x09570,0x052f2,0x04970,
    0x06566,0x0d4a0,0x0ea50,0x06e95,0x05ad0,0x02b60,0x186e3,0x092e0,0x1c8d7,0x0c950,
    0x0d4a0,0x1d8a6,0x0b550,0x056a0,0x1a5b4,0x025d0,0x092d0,0x0d2b2,0x0a950,0x0b557,
    0x06ca0,0x0b550,0x15355,0x04da0,0x0a5d0,0x14573,0x052d0,0x0a9a8,0x0e950,0x06aa0,
    0x0aea6,0x0ab50,0x04b60,0x0aae4,0x0a570,0x05260,0x0f263,0x0d950,0x05b57,0x056a0,
    0x096d0,0x04dd5,0x04ad0,0x0a4d0,0x0d4d4,0x0d250,0x0d558,0x0b540,0x0b5a0,0x195a6,
   0x095b0,0x049b0,0x0a974,0x0a4b0,0x0b27a,0x06a50,0x06d40,0x0af46,0x0ab60,0x09570,
   0x04af5,0x04970,0x064b0,0x074a3,0x0ea50,0x06b58,0x055c0,0x0ab60,0x096d5,0x092e0,
   0x0c960,0x0d954,0x0d4a0,0x0da50,0x07552,0x056a0,0x0abb7,0x025d0,0x092d0,0x0cab5,
   0x0a950,0x0b4a0,0x0baa4,0x0ad50,0x055d9,0x04ba0,0x0a5b0,0x15176,0x052b0,0x0a930,
   0x07954,0x06aa0,0x0ad50,0x05b52,0x04b60,0x0a6e6,0x0a4e0,0x0d260,0x0ea65,0x0d530,
   0x05aa0,0x076a3,0x096d0,0x04bd7,0x04ad0,0x0a4d0,0x1d0b6,0x0d250,0x0d520,0x0dd45,
   0x0b5a0,0x056d0,0x055b2,0x049b0,0x0a577,0x0a4b0,0x0aa50,0x1b255,0x06d20,0x0ada0)

   var   solarMonth=new   Array(31,28,31,30,31,30,31,31,30,31,30,31);
   var   Gan=new   Array("甲","乙","丙","丁","戊","己","庚","辛","壬","癸");
   var   Zhi=new   Array("子","丑","寅","卯","辰","巳","午","未","申","酉","戌","亥");
   var   Animals=new   Array("鼠","牛","虎","兔","龙","蛇","马","羊","猴","鸡","狗","猪");
   var   solarTerm   =   new   Array("小寒","大寒","立春","雨水","惊蛰","春分","清明","谷雨","立夏","小满","芒种","夏至","小暑","大暑","立秋","处暑","白露","秋分","寒露","霜降","立冬","小雪","大雪","冬至")
   var   sTermInfo   =   new   Array(0,21208,42467,63836,85337,107014,128867,150921,173149,195551,218072,240693,263343,285989,308563,331033,353350,375494,397447,419210,440795,462224,483532,504758)
   var   nStr1   =   new   Array('日','一','二','三','四','五','六','七','八','九','十')
   var   nStr2   =   new   Array('初','十','廿','卅','　')
   var   monthName   =   new   Array("JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC");


   //新历节日 *表示放假日  不带*表示普通节日
var sFtv=new Array();

//农历节日
var lFtv = new Array();

//某月的第几个星期几
var wFtv = new Array();

   /**//*****************************************************************************
                                                                               日期计算
   *****************************************************************************/

   //======================================   传回农历   y年的总天数
   function   lYearDays(y)   {
         var   i,   sum   =   348
         for(i=0x8000;   i>0x8;   i>>=1)   sum   +=   (lunarInfo[y-1900]   &   i)?   1:   0
         return(sum+leapDays(y))
   }

   //======================================   传回农历   y年闰月的天数
   function   leapDays(y)   {
        if(leapMonth(y))     return((lunarInfo[y-1900]   &   0x10000)?   30:   29)
        else   return(0)
  }

  //======================================   传回农历   y年闰哪个月   1-12   ,   没闰传回   0
  function   leapMonth(y)   {
       return(lunarInfo[y-1900]   &   0xf)
   }

   //======================================   传回农历   y年m月的总天数
  function   monthDays(y,m)   {
        return(   (lunarInfo[y-1900]   &   (0x10000>>m))?   30:   29   )
  }

  //======================================   算出农历,   传入日期物件,   传回农历日期物件
  //                                                                               该物件属性有   .year   .month   .day   .isLeap   .yearCyl   .dayCyl   .monCyl
  function   Lunar(objDate)   {   //传入当前日期 格式2010,6,20

        var   i,   leap=0,   temp=0
        var   baseDate   =   new   Date(1900,0,31)
         var   offset       =   (objDate   -   baseDate)/86400000

         this.dayCyl   =   offset   +   40
        this.monCyl   =   14

        for(i=1900;   i<2050   &&   offset>0;   i++)   {
              temp   =   lYearDays(i)
               offset   -=   temp
              this.monCyl   +=   12
        }

       if(offset<0)   {
              offset   +=   temp;
              i--;
              this.monCyl   -=   12
       }

        this.year   =   i
        this.yearCyl   =   i-1864

        leap   =   leapMonth(i)   //闰哪个月
       this.isLeap   =   false

        for(i=1;   i<13   &&   offset>0;   i++)   {
             //闰月
              if(leap>0   &&   i==(leap+1)   &&   this.isLeap==false)
                    {   --i;   this.isLeap   =   true;   temp   =   leapDays(this.year);   }
             else
                    {   temp   =   monthDays(this.year,   i);   }

              //解除闰月
             if(this.isLeap==true   &&   i==(leap+1))   this.isLeap   =   false

             offset   -=   temp
              if(this.isLeap   ==   false)   this.monCyl   ++
       }

       if(offset==0   &&   leap>0   &&   i==leap+1)
              if(this.isLeap)
                   {   this.isLeap   =   false;   }
              else
                   {   this.isLeap   =   true;   --i;   --this.monCyl;}

       if(offset<0){   offset   +=   temp;   --i;   --this.monCyl;   }

       this.month   =   i
        this.day   =   offset   +   1
       //alert(this.month+'|'+this.day);  //农历月+农历日
 }

  //==============================传回国历   y年某m+1月的天数
  function   solarDays(y,m)   {
       if(m==1)
             return(((y%4   ==   0)   &&   (y%100   !=   0)   ||   (y%400   ==   0))?   29:   28)
       else
              return(solarMonth[m])
}
  //==============================   传入   offset   传回干支,   0=甲子
  function   cyclical(num)   {
        return(Gan[num%10]+Zhi[num%12])
 }

  //======================   中文日期
 function   cDay(d){
        var   s;

        switch   (d)   {
              case   10:
                   s   =   '初十';   break;
            case   20:
                  s   =   '二十';   break;
                    break;
              case   30:
                  s   =   '三十';   break;
                   break;
             default   :
                    s   =   nStr2[Math.floor(d/10)];
                    s   +=   nStr1[d%10];
       }
        return(s);
  }
  //======================   中文月份
  function   cMonth(m){
        var   s;

        switch   (m)   {
              case   1:
                    s   =   '正月';   break;
              case   2:
                    s   =   '二月';   break;
              case   3:
                   s   =   '三月';   break;
              case   4:
                    s   =   '四月';   break;
              case   5:
                    s   =   '五月';   break;
            case   6:
                   s   =   '六月';   break;
              case   7:
                    s   =   '七月';   break;
              case   8:
                    s   =   '八月';   break;
              case   9:
                    s   =   '九月';   break;
              case   10:
                   s   =   '十月';   break;
              case   11:
                   s   =   '十一月';   break;
              case   12:
                    s   =   '十二月';   break;
              default   :
                    break;
        }
        return(s);
  }
  //需要转换的时候调用这个方法就可以了
  function   GetLunarDay(YearStr,MonthStr,DayStr)
  {
    var   sDObj=new   Date(parseInt(YearStr),parseInt(MonthStr)-1,parseInt(DayStr))
    var   lDObj=new   Lunar(sDObj)           //农历
    return   cMonth(lDObj.month)+cDay(lDObj.day)+","+lDObj.month+","+lDObj.day;
  }
//下面是新历日历的显示
var cal;
var isFocus=false; //是否为焦点

//选择日期
function SelectDate(obj,strFormat)
{
    var date = new Date();
    var by = date.getFullYear();  //最小值 → 今年
    var ey = date.getFullYear()+1;  //最大值 → 明年
    //cal = new Calendar(by, ey,1,strFormat);    //初始化英文版，0 为中文版
    cal = (cal==null) ? new Calendar(by, ey, 0) : cal;    //不用每次都初始化
    cal.dateFormatStyle = strFormat;
    cal.show(obj);
}
/**//**//**//**//**//**//**//**
* 返回日期
* @param d the delimiter
* @param p the pattern of your date
* 根据用户指定的 style 来确定；
*/
//String.prototype.toDate = function(x, p) {
String.prototype.toDate = function(style) {
/**//**//**//**//**//**//**//*
  if(x == null) x = "-";
  if(p == null) p = "ymd";
  var a = this.split(x);
  var y = parseInt(a[p.indexOf("y")]);
  //remember to change this next century ;)
  if(y.toString().length <= 2) y += 2000;
  if(isNaN(y)) y = new Date().getFullYear();
  var m = parseInt(a[p.indexOf("m")]) - 1;
  var d = parseInt(a[p.indexOf("d")]);
  if(isNaN(d)) d = 1;
  return new Date(y, m, d);
  */
  var y = this.substring(style.indexOf('y'),style.lastIndexOf('y')+1);//年
  var m = this.substring(style.indexOf('M'),style.lastIndexOf('M')+1);//月
  var d = this.substring(style.indexOf('d'),style.lastIndexOf('d')+1);//日
  if(isNaN(y)) y = new Date().getFullYear();
  if(isNaN(m)) m = new Date().getMonth();
  if(isNaN(d)) d = new Date().getDate();
  var dt ;
  eval ("dt = new Date('"+ y+"', '"+(m-1)+"','"+ d +"')");  //构造用户选择的日期 从而显示在text中
  return dt;
}

/**//**//**//**//**//**//**//**
* 格式化日期
* @param   d the delimiter
* @param   p the pattern of your date
* @author  meizz
*/
Date.prototype.format = function(style) {
  var o = {
    "M+" : this.getMonth() + 1, //month
    "d+" : this.getDate(),      //day
    "h+" : this.getHours(),     //hour
    "m+" : this.getMinutes(),   //minute
    "s+" : this.getSeconds(),   //second
    "w+" : "天一二三四五六".charAt(this.getDay()),   //week  利用day做下标 0 ：日 1：一....
    "q+" : Math.floor((this.getMonth() + 3) / 3),  //quarter
    "S"  : this.getMilliseconds() //millisecond
  }
  if(/(y+)/.test(style)) {
    style = style.replace(RegExp.$1,
    (this.getFullYear() + "").substr(4 - RegExp.$1.length));
  }
  for(var k in o){
    if(new RegExp("("+ k +")").test(style)){
      style = style.replace(RegExp.$1,
        RegExp.$1.length == 1 ? o[k] :
        ("00" + o[k]).substr(("" + o[k]).length));
    }
  }
  return style;
};

/**//**//**//**//**//**//**//**
* 日历类
* @param   beginYear 1990
* @param   endYear   2010
* @param   lang      0(中文)|1(英语) 可自由扩充
* @param   dateFormatStyle  "yyyy-MM-dd";
* @update
*/
function Calendar(beginYear, endYear, lang, dateFormatStyle) {
  this.beginYear = 1990;
  this.endYear = 2010;
  this.lang = 0;            //0(中文) | 1(英文)
  this.dateFormatStyle = "yyyy-MM-dd";

  if (beginYear != null && endYear != null){
    this.beginYear = beginYear;
    this.endYear = endYear;
  }
  if (lang != null){
    this.lang = lang
  }

  if (dateFormatStyle != null){
    this.dateFormatStyle = dateFormatStyle
  }

  this.dateControl = null;
  this.panel = this.getElementById("calendarPanel");
  this.container = this.getElementById("ContainerPanel");
  this.form  = null;

  this.date = new Date();
  this.year = this.date.getFullYear();
  this.month = this.date.getMonth();


  this.colors = {
  "cur_word"      : "#FFFFFF",  //当日日期文字颜色
  "cur_bg"        : "#00FF00",  //当日日期单元格背影色
  "sel_bg"        : "#FFCCCC",  //已被选择的日期单元格背影色
  "sun_word"      : "#0000FF",  //星期天文字颜色
  "sat_word"      : "#0000FF",  //星期六文字颜色
  "td_word_light" : "#333333",  //单元格文字颜色
  "td_word_dark"  : "#CCCCCC",  //单元格文字暗色
  "td_bg_out"     : "#EFEFEF",  //单元格背影色
  "td_bg_over"    : "#FFCC00",  //单元格背影色
  "tr_word"       : "#FFFFFF",  //日历头文字颜色
  "tr_bg"         : "#666666",  //日历头背影色
  "input_border"  : "#CCCCCC",  //input控件的边框颜色
  "input_bg"      : "#EFEFEF",   //input控件的背影色
  "Holiday_bg"    : "#FF0000",   //节日字体的显示颜色
  "Holiday_yes"    : "#FF0ee0",   //input控件的背影色
  "Holiday_no"    : "#FF0660"   //input控件的背影色
  }

  this.draw();
  this.bindYear();
  this.bindMonth();
  //this.changeSelect();
  //this.bindData(this.month);
}

/**//**//**//**//**//**//**//**
* 日历类属性（语言包，可自由扩展）
*/
Calendar.language = {
  "year"   : [[""], [""]],
  "months" : [["一月","二月","三月","四月","五月","六月","七月","八月","九月","十月","十一月","十二月"],
        ["JAN","FEB","MAR","APR","MAY","JUN","JUL","AUG","SEP","OCT","NOV","DEC"]
         ],
  "weeks"  : [["日","一","二","三","四","五","六"],
        ["SUN","MON","TUR","WED","THU","FRI","SAT"]
         ],
  "clear"  : [["清空"], ["CLS"]],
  "today"  : [["今天"], ["TODAY"]],
  "close"  : [["关闭"], ["CLOSE"]]
}

Calendar.holiday = {
  "month"   :[0,1,2,3,4,5,6,7,8,9],  //这个月从数据库读取 calendar.holiday["month"][i]
  "day"     :[],  //这个天也是从数据库读取 calendar.holiday["day"][i]
  "holiday" :[]  //从数据库读取   这3个数据是一一对应的 calendar.holiday["holidy"][i]
}


Calendar.prototype.draw = function() {
  calendar = this;

  var mvAry = [];
  //mvAry[mvAry.length]  = '  <form name="calendarForm" style="margin: 0px;">'; //因 <form> 不能嵌套
  mvAry[mvAry.length]  = '  <div name="calendarForm" style="margin: 0px;">';
  mvAry[mvAry.length]  = '    <table width="100%" border="0" cellpadding="0" cellspacing="1">';
  mvAry[mvAry.length]  = '      <tr>';
  mvAry[mvAry.length]  = '        <th align="left" width="1%"><input style="border: 1px solid ' + calendar.colors["input_border"] + ';background-color:' + calendar.colors["input_bg"] + ';width:16px;height:20px;" name="prevMonth" type="button" id="prevMonth" value="&lt;" /></th>';
  mvAry[mvAry.length]  = '        <th align="center" width="98%" nowrap="nowrap"><select name="calendarYear" id="calendarYear" style="font-size:12px;"></select><select name="calendarMonth" id="calendarMonth" style="font-size:12px;"></select></th>';
  mvAry[mvAry.length]  = '        <th align="right" width="1%"><input style="border: 1px solid ' + calendar.colors["input_border"] + ';background-color:' + calendar.colors["input_bg"] + ';width:16px;height:20px;" name="nextMonth" type="button" id="nextMonth" value="&gt;" /></th>';
  mvAry[mvAry.length]  = '      </tr>';
  mvAry[mvAry.length]  = '    </table>';
  mvAry[mvAry.length]  = '    <table id="calendarTable" width="100%" style="border:0px solid #CCCCCC;background-color:#FFFFFF" border="0" cellpadding="3" cellspacing="1">';
  mvAry[mvAry.length]  = '      <tr>';  //这个tr显示周日-周六这个几个字
  for(var i = 0; i < 7; i++) {
    mvAry[mvAry.length]  = '      <th style="font-weight:normal;background-color:' + calendar.colors["tr_bg"] + ';color:' + calendar.colors["tr_word"] + ';">' + Calendar.language["weeks"][this.lang][i] + '</th>';
  }
  mvAry[mvAry.length]  = '      </tr>';
  for(var i = 0; i < 6;i++){  //表示循环6行
    mvAry[mvAry.length]  = '    <tr align="center">';
    for(var j = 0; j < 7; j++) { //表示每行显示周一到周六的日期(此时还没有实际的日期，只是对格式进行初始化)
      if (j == 0){  //表示周日(最右边是周日)
        mvAry[mvAry.length]  = '  <td style="cursor:default;color:' + calendar.colors["sun_word"] + ';"></td>';
      } else if(j == 6) {  //表示周六(最左边是周六)
        mvAry[mvAry.length]  = '  <td style="cursor:default;color:' + calendar.colors["sat_word"] + ';"></td>';
      } else { //表示周一到周六
        mvAry[mvAry.length]  = '  <td style="cursor:default;"></td>';
      }
    }
    mvAry[mvAry.length]  = '    </tr>';
  }
  mvAry[mvAry.length]  = '      <tr style="background-color:' + calendar.colors["input_bg"] + ';">';
  mvAry[mvAry.length]  = '        <th colspan="2"><input name="calendarClear" type="button" id="calendarClear" value="' + Calendar.language["clear"][this.lang] + '" style="border: 1px solid ' + calendar.colors["input_border"] + ';background-color:' + calendar.colors["input_bg"] + ';width:100%;height:20px;font-size:12px;"/></th>';
  mvAry[mvAry.length]  = '        <th colspan="3"><input name="calendarToday" type="button" id="calendarToday" value="' + Calendar.language["today"][this.lang] + '" style="border: 1px solid ' + calendar.colors["input_border"] + ';background-color:' + calendar.colors["input_bg"] + ';width:100%;height:20px;font-size:12px;"/></th>';
  mvAry[mvAry.length]  = '        <th colspan="2"><input name="calendarClose" type="button" id="calendarClose" value="' + Calendar.language["close"][this.lang] + '" style="border: 1px solid ' + calendar.colors["input_border"] + ';background-color:' + calendar.colors["input_bg"] + ';width:100%;height:20px;font-size:12px;"/></th>';
  mvAry[mvAry.length]  = '      </tr>';
  mvAry[mvAry.length]  = '    </table>';
  //mvAry[mvAry.length]  = '  </from>';
  mvAry[mvAry.length]  = '  </div>';
  this.panel.innerHTML = mvAry.join("");


  var obj = this.getElementById("prevMonth");
  obj.onclick = function () {calendar.goPrevMonth(calendar);}
  obj.onblur = function () {calendar.onblur();}
  this.prevMonth= obj;

  obj = this.getElementById("nextMonth");
  obj.onclick = function () {calendar.goNextMonth(calendar);}
  obj.onblur = function () {calendar.onblur();}
  this.nextMonth= obj;

obj = this.getElementById("calendarClear");
  obj.onclick = function () {calendar.dateControl.value = "";calendar.hide();}
  this.calendarClear = obj;

  obj = this.getElementById("calendarClose");
  obj.onclick = function () {calendar.hide();}
  this.calendarClose = obj;

  obj = this.getElementById("calendarYear");  //获得年的下拉框
  obj.onchange = function () {calendar.update(calendar);}
  obj.onblur = function () {calendar.onblur();}
  this.calendarYear = obj;

  obj = this.getElementById("calendarMonth");  //获得月的下拉框
  with(obj)
  {
    onchange = function () {calendar.update(calendar);}
    onblur = function () {calendar.onblur();}
  }this.calendarMonth = obj;

  obj = this.getElementById("calendarToday");
  obj.onclick = function () {
    var today = new Date();
    /**//*calendar.date = today;
    calendar.year = today.getFullYear();
    calendar.month = today.getMonth();
    calendar.changeSelect();
    calendar.bindData(calendar.month);
    */ //
    calendar.dateControl.value = today.format(calendar.dateFormatStyle);
    calendar.hide();
  }
  this.calendarToday = obj;

}

//年份下拉框绑定数据
Calendar.prototype.bindYear = function() {
  //var cy = this.form.calendarYear;
  var cy = this.calendarYear;
  cy.length = 0;
  for (var i = this.beginYear; i <= this.endYear; i++){
    cy.options[cy.length] = new Option(i + Calendar.language["year"][this.lang], i);
  }
}

//月份下拉框绑定数据
Calendar.prototype.bindMonth = function() {
  //var cm = this.form.calendarMonth;
  var cm = this.calendarMonth;
  cm.length = 0;
  for (var i = 0; i < 12; i++){
    cm.options[cm.length] = new Option(Calendar.language["months"][this.lang][i], i);
  }
}

//向前一月
Calendar.prototype.goPrevMonth = function(e){
  if (this.year == this.beginYear && this.month == 0){return;}
  this.month--;
  if (this.month == -1) {
    this.year--;
    this.month = 11;
  }
  this.date = new Date(this.year, this.month, 1);
  this.changeSelect();
  this.bindData(this.month);
}

//向后一月
Calendar.prototype.goNextMonth = function(e){
  if (this.year == this.endYear && this.month == 11){return;}
  this.month++;
  if (this.month == 12) {
    this.year++;
    this.month = 0;
  }
  this.date = new Date(this.year, this.month, 1);
  this.changeSelect();
  this.bindData(this.month);
}

//改变SELECT选中状态
Calendar.prototype.changeSelect = function() {
  var cy = this.calendarYear;
  var cm = this.calendarMonth;
  cy[this.date.getFullYear()-this.beginYear].selected = true;
  cm[this.date.getMonth()].selected =true;
/**//*
  for (var i= 0; i < cy.length; i++){
    if (cy.options[i].value == this.date.getFullYear()){
      cy[i].selected = true;
      break;
    }
  }
  for (var i= 0; i < cm.length; i++){
    if (cm.options[i].value == this.date.getMonth()){
      cm[i].selected = true;
      break;
    }
  }
*/
//
}

//更新年、月(在年或月的下拉框事件被触发时执行的方法)
Calendar.prototype.update = function (e){
  this.year  = e.calendarYear.options[e.calendarYear.selectedIndex].value;
  this.month = e.calendarMonth.options[e.calendarMonth.selectedIndex].value;
  this.date = new Date(this.year, this.month, 1);  //获得当前年、当前月的1号是一周中的第几天
  this.changeSelect();   //用来设定那些日期可以被用户选择(近判断能否选择)
  this.bindData(this.month);  //真正的数据绑定
}

//绑定数据到月视图
Calendar.prototype.bindData = function (m) {

  var mm=parseInt(m)+parseInt(1)+'';  //将月转化为字符

  //看这个月有什么公历假日 减少循环
  //alert(parseInt(m)+1);  //这里的m一定要转化为整数，因为从DOM元素传来的值都是String类型
 for(i in sFtv)
 if(sFtv[i].match(/^(\d{2})(\d{2})([\s\*])(.+)$/))
 if(Number(RegExp.$1)==Number((parseInt(m)+1))) {
   temp.push(sFtv[i]);
 }

  var calendar = this;
  var temori='';  //当前多少号了，因为后面这个变量不断改变,而本身又经常用到
  var dateArray = this.getMonthViewArray(this.date.getFullYear(), this.date.getMonth());
  var tds = this.getElementById("calendarTable").getElementsByTagName("td"); //按顺序已经产生很多td[按顺序来就可以了]


  for(var i = 0; i < tds.length; i++) { //分别对每个td进行设置
  temori=dateArray[i];
  tds[i].style.color = calendar.colors["td_word_light"]; //设置统一的字体颜色
  if(i%7==0){  //设置周日的日期
     tds[i].style.color = calendar.colors["sun_word"]; //测试其他颜色
  }
  if((i+1)%7==0){  //设置周六的日期
     tds[i].style.color = calendar.colors["sat_word"]; //测试其他颜色
  }
  tds[i].style.backgroundColor = calendar.colors["td_bg_out"];
    tds[i].onclick = function () {return;}
    tds[i].onmouseover = function () {return;}
    tds[i].onmouseout = function () {return;}
    if (i > dateArray.length - 1) break;

  //加农历上去
  var nongli=GetLunarDay(calendar.date.getFullYear(),calendar.date.getMonth()+1,dateArray[i]);
  var dd=nongli.split(",");
  if(dd[0].match(/初一/)){
     dd[0]=dd[0].substring(0,dd[0].indexOf('月')+1);
  }else{
     dd[0]=dd[0].substring(dd[0].indexOf('月')+1,dd[0].length);
  }
  if(dateArray[i]!="&nbsp;"){
    dateArray[i] = dateArray[i]+'<br>'+dd[0];
  }

  //农历节日
  var ddmonth=dd[1];
  var ddday=dd[2];
  if(ddmonth.length==1){
    ddmonth='0'+ddmonth;
  }
  if(ddday.length==1){
   ddday='0'+ddday;
  }
  var nongliholiday=''+ddmonth+ddday;


  //农历节日

for(var t=0;t<lFtv.length;t++){

  if(lFtv[t].match(/^(\d{2})(\d{2})([\s\*])(.+)$/)){
       if(Number(RegExp.$1)==(ddmonth)&&Number(RegExp.$2)==(ddday)){  //进一步判断日是否相等
         if(RegExp.$3!='*'){  //表示普通节日
              dateArray[i] = dateArray[i] +"<br> <FONT COLOR='#fe00ff'>"+RegExp.$4+ '</FONT>'+' ';
              //tds[i].style.backgroundColor = calendar.colors["Holiday_no"];
         }else if(RegExp.$3=='*'){  //表示有假期的节日
             dateArray[i] = dateArray[i] +"<br> <FONT COLOR='"+calendar.colors["Holiday_bg"]+"'>"+RegExp.$4+ '</FONT>'+' ';
             //tds[i].style.backgroundColor = calendar.colors["Holiday_yes"];
         }
        //lFtv.splice(t,1);  //数据出栈
     }
    }
  }


  //国历节日
  if(mm.length==1){
    mm='0'+mm;
  }
  if((''+temori).length==1){
     temori='0'+temori;
  }
  var obj=''+mm+temori;  //这个就是我们组装的月+日的形式，然后去对象中去取相应的值就可以了

  for(var t=0;t<temp.length;t++){

  if(temp[t].match(/^(\d{2})(\d{2})([\s\*])(.+)$/)){
       if(Number(RegExp.$2)==(temori)){  //进一步判断日是否相等
         if(RegExp.$3!='*'){  //表示普通节日
              dateArray[i] = dateArray[i] +"<br> <FONT COLOR='#fe00ff'>"+RegExp.$4+ '</FONT>'+' ';
              //tds[i].style.backgroundColor = calendar.colors["Holiday_no"];
         }else if(RegExp.$3=='*'){  //表示有假期的节日
             dateArray[i] = dateArray[i] +"<br> <FONT COLOR='"+calendar.colors["Holiday_bg"]+"'>"+RegExp.$4+ '</FONT>'+' ';
             //tds[i].style.backgroundColor = calendar.colors["Holiday_yes"];
         }
        temp.splice(t,1);  //数据出栈
     }
    }

  }



   tds[i].innerHTML = dateArray[i];

   //单击事件
               tds[i].onclick = function () {
                   if (calendar.dateControl != null){
                       var first=this.innerHTML.indexOf("<BR>");
                       var after=this.innerHTML.substring(0,first);
                       calendar.dateControl.value += new Date(calendar.date.getFullYear(),
                       calendar.date.getMonth(),after).format(calendar.dateFormatStyle)+';';
                    }

                   //calendar.hide();  //单击之后隐藏当前窗口
              }

        //鼠标移上去的事件

           tds[i].onmouseover = function () {  //设置背景颜色
               this.style.backgroundColor = calendar.colors["td_bg_over"];
           }

       //鼠标移出事件
          tds[i].onmouseout = function () {
             this.style.backgroundColor = calendar.colors["td_bg_out"];
             var setcolor=this.innerHTML.indexOf("<BR>");
          }

      //今天的颜色



      if (new Date().format(calendar.dateFormatStyle) ==
          new Date(calendar.date.getFullYear(),
                   calendar.date.getMonth(),
                   temori).format(calendar.dateFormatStyle)) {
        tds[i].style.color = calendar.colors["cur_word"];
        tds[i].style.backgroundColor = calendar.colors["cur_bg"];
        tds[i].onmouseover = function () {
          this.style.backgroundColor = calendar.colors["td_bg_over"];
        }
        tds[i].onmouseout = function () {
          this.style.backgroundColor = calendar.colors["cur_bg"];
        }
        //continue; //若不想当天单元格的背景被下面的覆盖，
      }//end if


      //设置已被选择的日期单元格背影色
      if (calendar.dateControl != null && calendar.dateControl.value == new Date(calendar.date.getFullYear(),
                   calendar.date.getMonth(),
                   dateArray[i]).format(calendar.dateFormatStyle)) {
        tds[i].style.backgroundColor = calendar.colors["sel_bg"];
        tds[i].onmouseover = function () {
          this.style.backgroundColor = calendar.colors["td_bg_over"];
        }
        tds[i].onmouseout = function () {
          this.style.backgroundColor = calendar.colors["sel_bg"];
        }
      }
    }
  }
//}

//根据年、月得到月视图数据(数组形式)
Calendar.prototype.getMonthViewArray = function (y, m) {
  var mvArray = [];
  var dayOfFirstDay = new Date(y, m, 1).getDay();  //获得这个月的第一天是一周中的第几天
  //var dayOfFirstDay = new Date(y, m+1, 1).getDay();  //获得这个月的第一天是一周中的第几天(只是为了区别，自己加进去的)
  var daysOfMonth = new Date(y, m + 1, 0).getDate(); //获得这个月的最后一天是多少号
  for (var i = 0; i < 42; i++) {
    mvArray[i] = "&nbsp;";  //补空
  }
  for (var i = 0; i < daysOfMonth; i++){ //对这些天数进行循环并且显示在日历中
    mvArray[i + dayOfFirstDay] = i + 1;   //将空值进行覆盖
  }
  return mvArray;
}

//扩展 document.getElementById(id) 多浏览器兼容性 from meizz tree source
Calendar.prototype.getElementById = function(id){
  if (typeof(id) != "string" || id == "") return null;
  if (document.getElementById) return document.getElementById(id);
  if (document.all) return document.all(id);
  try {return eval(id);} catch(e){ return null;}
}

//扩展 object.getElementsByTagName(tagName)
Calendar.prototype.getElementsByTagName = function(object, tagName){
  if (document.getElementsByTagName) return document.getElementsByTagName(tagName);
  if (document.all) return document.all.tags(tagName);
}

//取得HTML控件绝对位置
Calendar.prototype.getAbsPoint = function (e){
  var x = e.offsetLeft;
  var y = e.offsetTop;
  while(e = e.offsetParent){
    x += e.offsetLeft;
    y += e.offsetTop;
  }
  return {"x": x, "y": y};
}

//显示日历
Calendar.prototype.show = function (dateObj, popControl) {
  if (dateObj == null){
    throw new Error("arguments[0] is necessary")
  }
  this.dateControl = dateObj;  //将当前对象传递给js定义的变量，这个变量存放的就是这个DOM对象

  //if (dateObj.value.length > 0){
  //this.date = new Date(dateObj.value.toDate());
  //this.date = new Date(dateObj.value.toDate(this.dateFormatStyle));带入用户指定的 style
  this.date = (dateObj.value.length > 0) ? new Date(dateObj.value.toDate(this.dateFormatStyle)) : new Date() ;//若为空则显示当前月份
  this.year = this.date.getFullYear();
  this.month = this.date.getMonth();
  this.changeSelect();
  this.bindData(this.month);
  //}
  if (popControl == null){
    popControl = dateObj;
  }
  var xy = this.getAbsPoint(popControl);
  this.panel.style.left = xy.x -25 + "px";
  this.panel.style.top = (xy.y + dateObj.offsetHeight) + "px";

  // 把 visibility 变为 display，并添加失去焦点的事件
  //this.setDisplayStyle("select", "hidden");
  //this.panel.style.visibility = "visible";
  //this.container.style.visibility = "visible";
  this.panel.style.display = "";
  this.container.style.display = "";

  dateObj.onblur = function(){calendar.onblur();}
  this.container.onmouseover = function(){isFocus=true;}
  this.container.onmouseout = function(){isFocus=false;}
}

//隐藏日历
Calendar.prototype.hide = function() {
  //this.setDisplayStyle("select", "visible");
  //this.panel.style.visibility = "hidden";
  //this.container.style.visibility = "hidden";
  this.panel.style.display = "none";
  this.container.style.display = "none";
  isFocus=false;
}

//焦点转移时隐藏日历
Calendar.prototype.onblur = function() {
    if(!isFocus){this.hide();}
}

//用<iframe> 遮住 IE 的下拉框
/**//**//**//**//**//**//**//*
//设置控件显示或隐藏
Calendar.prototype.setDisplayStyle = function(tagName, style) {
  var tags = this.getElementsByTagName(null, tagName)
  for(var i = 0; i < tags.length; i++) {
    if (tagName.toLowerCase() == "select" &&
       (tags[i].name == "calendarYear" ||
      tags[i].name == "calendarMonth")){
      continue;
    }
    //tags[i].style.visibility = style;
    tags[i].style.display = style;
  }
}
*/
//document.write('<div id="ContainerPanel" style="visibility:hidden"><div id="calendarPanel" style="position: absolute;visibility: hidden;z-index: 9999;');
document.write('<div id="ContainerPanel" style="display:none"><div id="calendarPanel" style="position: absolute;display: none;z-index: 9999;');
document.write('background-color: #FFFFFF;border: 1px solid #CCCCCC;width:475px;font-size:12px;"></div>'); //这里的width:275px控制日历的显示大小
if(document.all)
{
document.write('<iframe style="position:absolute;z-index:2000;width:expression(this.previousSibling.offsetWidth);');
document.write('height:expression(this.previousSibling.offsetHeight);');
document.write('left:expression(this.previousSibling.offsetLeft);top:expression(this.previousSibling.offsetTop);');
document.write('display:expression(this.previousSibling.style.display);" scrolling="no" frameborder="no"></iframe>');
}
document.write('</div>');
//var calendar = new Calendar();  //此句被注释，否则 IE 将报错
//调用calendar.show(dateControl, popControl);
//-->
</script>
</head>
<body leftmargin="0" topmargin="0" marginwidth="0" marginheight="0" >
    <form name="editForm" method="post" action="../holiday/holidayEdit.do">
        <input type="hidden" name="submitFlag" value="0" />
        <input type="hidden" name="submitFlag" value="0" />
        <input type="hidden" name="submitFlag" value="0" />
        <table width="100%" height="100%"  cellpadding="0" cellspacing="0">
            <tr valign="top">
                <td height="28" valign="top">
                    <table cellspacing="0" cellpadding="0" class="TbTitle" align="center">
                        <tr>
                            <td height="24">
                                <div class="DivIcoEdit">假日时间管理</div>
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
            <tr valign="top">
                <td align="center" height="100%" >
                    <table width="100%" border="0" cellpadding="3" cellspacing="0" class="TbCommon">
                        <input type="hidden" name="submitFlag" value="0" />
                        <input type="hidden" name="token" value="$!{token}" />
                        <input type="hidden" name="holidayId" value="$!{holiday.holidayId}" />
                        <tr align="center">
                            <td width="18%" align="right" class="TdLabel">#requiredInput("节假日名称")</td>
                            <td width="32%" align="left" class="TdInput" >
                                #makeTextInput("holidayName" "$!{holiday.holidayName}" "style='width:80%'")
                            </td>
                            <td width="18%" align="right" class="TdLabel">#requiredInput("节假日类型")</td>
                            <td width="32%" align="left" class="TdInput" >
                               #formSingleSelectDictionary("holidayType" $!{holiday.holidayType} ${dicData.dicHolidayType} "" "--请选择--")
                            </td>
                        </tr>
                        <tr align="center">
                            <td width="18%" align="right" class="TdLabel">#requiredInput("是否是法定假日")</td>
                            <td  align="left" class="TdInput" colspan="3">
                               #formSingleSelectDictionary("isStatutory" $!{holiday.isStatutory} ${dicData.dicIsStatutory} "" "--请选择--")
                            </td>
                        </tr>
                        <tr align="center">
                            <td width="18%" align="right" class="TdLabel">#requiredInput("节假日时间")</td>
                            <td  align="left" class="TdInput" colspan=3>
                                  #dateMoreEditor("holidayStr" "#formatDate($!{holiday.holidayDate})"  "style='width:65%'")
                                  <a href="javascript:delholidayStr();" >清空时间</a>
                            </td>
                        </tr>
                        <tr align="center">
                            <td width="18%" align="right" class="TdLabel">#requiredInput("是否放假")</td>
                            <td width="32%" align="left" class="TdInput" >
                                 #formSingleSelectDictionary("isLeave" $!{holiday.isLeave} ${dicData.dicIsLeave} "" "--请选择--")
                            </td>
                            <td width="18%" align="right" class="TdLabel">放假原因</td>
                            <td width="32%" align="left" class="TdInput" >
                                #formSingleSelectDictionary("holidayReason" $!{holiday.holidayReason} ${dicData.dicHolidayReason} "" "--请选择--")
                            </td>
                        </tr>
            <tr align="center">
                            <td width="18%" align="right" class="TdLabel">备注</td>
                            <td  align="left" class="TdInput" colspan=3>
                                  #makeTextInput("remark" "$!{holiday.remark}" "style='width:80%'")
                            </td>
                        </tr>
                        <tr align="center">
                            <td  class="buttonarea" colspan="8">
                                #makeButton("保 存" "doSave()" "")
                                #makeButton("返 回" "doReturn()" "")
                            </td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </form>
</body>
</html>
<script >
validator.formName = "editForm";
    validator.addNormalCheckPoint("holidayName", "节假日名称", "checkNotNull;checkNotEmpty");
  validator.addNormalCheckPoint("holidayType", "节假日类型", "checkNotNull;checkNotEmpty");
  validator.addNormalCheckPoint("isStatutory", "是否法定假日", "checkNotNull;checkNotEmpty");
  validator.addNormalCheckPoint("holidayStr", "节假日时间", "checkNotNull;checkNotEmpty");
  validator.addNormalCheckPoint("isLeave", "是否放假", "checkNotNull;checkNotEmpty");

function doSave(){
  var holidayStr=document.getElementsByName('holidayStr');
  var dateValue=holidayStr[0].value;
  var subDate= new Array();
  var tempdate="";
  subDate=dateValue.split(";");
    for (i=0;i<subDate.length ;i++ )
    {
       tempdate=subDate[i];
       for (j=0;j<subDate.length;j++ ){
       if(i!=j){
            if(tempdate==subDate[j]){
               alert("您选择的时间由重复，请重新选择"+tempdate+"|"+subDate[j]);
               return false;
            }
     }
      }
    }



  var e = document.editForm;

    if (checkInput(e) && confirm("您确定要提交吗？")) {
       e.submitFlag.value = "1";
       e.submit();
    }

}

function checkInput(e) {
    if (e.submitFlag.value == "1") {
        alert("页面已提交，请稍候！");
        return false;
    }
    return validator.checkAll();
}

function doReturn(){
  location.href = "../holiday/holidayQuery.do";
}
function delholidayStr(){
  var holidayStr=document.getElementsByName('holidayStr');
  holidayStr[0].value="";
}


</script>
